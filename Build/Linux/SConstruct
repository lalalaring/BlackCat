
def TmpDir(x):
    return '#/@tmp/' + x
def LibDir(x):
    return '#/@lib/' + x
def BinDir(x):
    return '#/@bin/' + x

env = Environment()

env.Replace(CC = 'gcc')
env.Replace(CXX = 'g++')
env.Replace(CCFLAGS = '-g -DPOSIX -O2 -Wall')
env.Replace(CXXFLAGS = '-std=gnu++11 -D__STRICT_ANSI__')

env.VariantDir(TmpDir('Common'), '../../Common')

includepath = Split('''
    /usr/local/include
    ''')
libs = Split('''
    liblua
    libluabind
    libboost_filesystem
    libboost_system
    libpthread
    dl
    ''')
libpath = Split('''
    /usr/lib
    /usr/local/lib
    ''')

env.VariantDir(TmpDir('ServerLib'), '../../ServerLib')
ServerLib = env.StaticLibrary(
    LibDir('ServerLib'),
    [Glob(TmpDir('ServerLib/*.cpp'))],
)

libs.insert(0, ServerLib)
env.VariantDir(TmpDir('Driver'), '../../Driver')
Driver = env.Program(
    BinDir('Driver'),
    [Glob(TmpDir('Driver/*.cpp'))],
    INCLUDEPATH = includepath,
    LIBS        = libs,
    LIBPATH     = libpath,
)

env.VariantDir(TmpDir('UnitTest'), '../../UnitTest')
UnitTest = env.Program(
    BinDir('UnitTest'),
    [Glob(TmpDir('UnitTest/*.cpp'))],
    INCLUDEPATH = includepath,
    LIBS        = libs,
    LIBPATH     = libpath,
)
Default(UnitTest)
